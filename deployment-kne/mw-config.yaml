---
- name: Topology Configuration
  hosts: localhost
  gather_facts: no
  vars:
    cgclients: []
    ddosclients: []
    limit_cg: 25
    limit_ddos: 21
    
  tasks:
#------------------------------------------Ip_routes---------------------------------------------------------------------      
      
    - name: Configure ddosserver
      shell: kubectl exec -it -n 6gndt ddosserver -- python3 ddosserver-config.py

    - name: Configure gateway2
      shell: kubectl exec -n 6gndt gateway2 -- python3 gateway2-config.py

    - name: Configure gateway1
      shell: kubectl exec -n 6gndt gateway1 -- python3 gateway1-config.py

    - name: Get ddosserver IP
      shell: "kubectl exec -n 6gndt ddosserver -- ip addr show ens1 | awk '/inet / {gsub(/\\/\\/[0-9]+/, \"\", $2); print $2}'"
      register: ddosserver_ip_output
      changed_when: false
      ignore_errors: yes

    - name: Extract IP from ddosserver_ip_output
      set_fact:
        ddosserver_ip: "{{ ddosserver_ip_output.stdout.split('/')[0] }}"
        
    - name: Debug ddosserverip
      debug:
        var: ddosserver_ip   
        
        
    - name: Store server IPs in a file
      copy:
        content: |
          ddosserver_ip: "{{ ddosserver_ip }}"
        dest: "{{ playbook_dir }}/server_ips.yaml"

  #---------------------------------------internet pod configuration----------------------------------------------------------------------------------------------
      
    - name: Iptables
      shell: kubectl exec -n 6gndt gateway2 -- /bin/sh -c 'iptables -t nat -A POSTROUTING -o ens2 -j MASQUERADE'
      ignore_errors: yes

 #---------------------------------------configure micaddy.com ip----------------------------------------------------------------------------------------------   

    - name: Update micaddy.com IP
      shell:  kubectl exec -n 6gndt ddosserver -- env ddosserver={{ ddosserver_ip }}  /bin/bash -c '/bin/sed -i "s/172\\.21\\.0\\.6/$ddosserver/g" /etc/bind/zones/db.micaddy.com'
      ignore_errors: yes

#---------------------------------------debug routers----------------------------------------------------------------------------------------------

    - name: Debug internet connection
      shell: kubectl exec -n 6gndt r2 -- /bin/bash -c 'until ping -c 1 -i 20 8.8.8.8; do :; done; exit 0'
      ignore_errors: yes

#----------------------------------------default routes-----------------------------------
    - name: add default route r1
      shell: kubectl exec -n 6gndt r1 -- sudo ip route replace default via 192.168.4.20 dev ens5
      ignore_errors: yes

    - name: add edge r1
      shell: kubectl exec -n 6gndt r1 -- sudo ip route add 10.0.2.0/24 via 192.168.1.11 dev ens6
      ignore_errors: yes

    - name: add default route r2
      shell: kubectl exec -n 6gndt r2 -- sudo ip route replace default via 192.168.15.1 dev ens4
      ignore_errors: yes

    - name: add edge r2
      shell: kubectl exec -n 6gndt r2 -- sudo ip route add default via 192.168.15.3 dev ens4
      ignore_errors: yes

    - name: add default route r3     
      shell: kubectl exec -n 6gndt r3 -- sudo ip route replace default via 192.168.8.20 dev ens6
      ignore_errors: yes
    
    - name: add edge r3     
      shell: kubectl exec -n 6gndt r3 -- sudo ip route add 10.0.2.0/24 via 192.168.8.20 dev ens6
      ignore_errors: yes

    - name: add default route r4
      shell: kubectl exec -n 6gndt r4 -- sudo ip route replace default via 192.168.3.1 dev ens4
      ignore_errors: yes
    
    - name: add edge r4
      shell: kubectl exec -n 6gndt r4 -- sudo ip route add 10.0.2.0/24 via 192.168.2.11 dev ens5
      ignore_errors: yes

    - name: add default route r5
      shell: kubectl exec -n 6gndt r5 -- sudo ip route replace default via 192.168.6.2 dev ens5
      ignore_errors: yes

    - name: add edge r5
      shell: kubectl exec -n 6gndt r5 -- sudo ip route add 10.0.2.0/24 via 192.168.7.6 dev ens4
      ignore_errors: yes

    - name: add default route r6
      shell: kubectl exec -n 6gndt r6 -- sudo ip route replace default via 192.168.7.5 dev ens5
      ignore_errors: yes

    - name: add edge r6
      shell: kubectl exec -n 6gndt r6 -- sudo ip route add 10.0.2.0/24 via 192.168.5.4 dev ens6
      ignore_errors: yes

    - name: add default route r7
      shell: kubectl exec -n 6gndt r7 -- sudo ip route replace default via 192.168.10.3 dev ens6
      ignore_errors: yes

    - name: add edge r7
      shell: kubectl exec -n 6gndt r7 -- sudo ip route add 10.0.2.0/24 via 192.168.9.6 dev ens4
      ignore_errors: yes

    - name: add default route r11
      shell: kubectl exec -n 6gndt r11 -- sudo ip route replace default via 192.168.1.1 dev ens4 && sudo ip route add 10.0.2.0/24 via 13.13.13.11 dev eth2
      ignore_errors: yes

    - name: add edge r11
      shell: kubectl exec -n 6gndt r11 -- sudo ip route add 10.0.2.0/24 via 13.13.13.11 dev eth2
      ignore_errors: yes

    - name: add default route r12
      shell: kubectl exec -n 6gndt r12 -- sudo ip route replace default via 192.168.13.2 dev ens4
      ignore_errors: yes

    - name: add edge r12
      shell: kubectl exec -n 6gndt r12 -- sudo ip route add 10.0.2.0/24 via 192.168.13.20 dev ens4
      ignore_errors: yes

    - name: add default route r13
      shell: kubectl exec -n 6gndt r13 -- sudo ip route replace default via 192.168.12.3 dev ens4 && sudo ip route add 10.0.2.0/24 via 192.168.12.3 dev ens4
      ignore_errors: yes

    - name: add edge r13
      shell: kubectl exec -n 6gndt r13 -- sudo ip route add 10.0.2.0/24 via 192.168.12.3 dev ens4
      ignore_errors: yes


#---------------------------------------tcpdump----------------------------------------------------------------------------------------------

    # - name: Start dumps
    #   shell: kubectl exec -n 6gndt {{ item.pod }} -- tcpdump -i {{ item.interface }} -w /home/{{ item.pod }}_{{ item.interface }}.pcap
    #   loop:
    #     - { pod: "ceos11", interface: "ens4" }
    #     - { pod: "ceos11", interface: "ens1" }
    #     - { pod: "ceos11", interface: "ens2" }
    #     - { pod: "ceos11", interface: "ens3" }
    #     - { pod: "ceos11", interface: "ens5" }
    #     - { pod: "ceos11", interface: "ens6" }
    #     - { pod: "ceos11", interface: "ens7" }
    #     - { pod: "ceos11", interface: "ens8" }
    #     - { pod: "ceos11", interface: "ens9" }
    #     - { pod: "ceos11", interface: "ens10" }
    #     - { pod: "ceos11", interface: "ens11" }
    #     - { pod: "ceos11", interface: "ens12" }
    #     - { pod: "ceos11", interface: "ens13" }
    #     - { pod: "ceos11", interface: "ens14" }
    #     - { pod: "ceos11", interface: "ens15" }
    #     - { pod: "ceos11", interface: "ens16" }
    #     - { pod: "ceos11", interface: "ens17" }
    #     - { pod: "ceos11", interface: "ens18" }
    #     - { pod: "ceos11", interface: "ens19" }
    #     - { pod: "ceos11", interface: "ens20" }
    #     - { pod: "ceos11", interface: "ens21" }
    #     - { pod: "ceos11", interface: "ens22" }
    #     - { pod: "ceos11", interface: "ens23" }
    #     - { pod: "ceos13", interface: "ens1" }
    #     - { pod: "ceos13", interface: "ens2" }
    #     - { pod: "ceos13", interface: "ens3" }
    #     - { pod: "ceos13", interface: "ens4" }
    #     - { pod: "ceos13", interface: "ens5" }
    #     - { pod: "ceos13", interface: "ens6" }
    #     - { pod: "ceos13", interface: "ens7" }
    #     - { pod: "ceos13", interface: "ens8" }
    #     - { pod: "ceos13", interface: "ens9" }
    #     - { pod: "ceos13", interface: "ens10" }
    #     - { pod: "ceos13", interface: "ens11" }
    #     - { pod: "ceos1", interface: "ens2" }
    #     - { pod: "ceos1", interface: "ens3" }
    #     - { pod: "ceos1", interface: "ens4" }
    #     - { pod: "ceos1", interface: "ens5" }
    #     - { pod: "ceos2", interface: "ens1" }
    #     - { pod: "ceos2", interface: "ens2" }
    #     - { pod: "ceos2", interface: "ens3" }
    #     - { pod: "ceos2", interface: "ens4" }
    #     - { pod: "ceos2", interface: "ens5" }
    #     - { pod: "ceos3", interface: "ens1" }
    #     - { pod: "ceos3", interface: "ens2" }
    #     - { pod: "ceos3", interface: "ens3" }
    #     - { pod: "ceos3", interface: "ens4" }
    #     - { pod: "ceos3", interface: "ens5" }
    #     - { pod: "ceos4", interface: "ens2" }
    #     - { pod: "ceos4", interface: "ens3" }
    #     - { pod: "ceos4", interface: "ens4" }
    #     - { pod: "ceos6", interface: "ens2" }
    #     - { pod: "ceos6", interface: "ens3" }
    #     - { pod: "ceos6", interface: "ens4" }
    #     - { pod: "ceos5", interface: "ens2" }
    #     - { pod: "ceos5", interface: "ens3" }
    #     - { pod: "ceos7", interface: "ens2" }
    #     - { pod: "ceos7", interface: "ens3" }
    #     - { pod: "ceos7", interface: "ens4" }
    #     - { pod: "ceos12", interface: "ens2" }
    #     - { pod: "ceos12", interface: "ens4" }
    #   async: 3600
    #   poll: 0


#---------------------------------------ddosclient, cgserver and ddosserver configuration----------------------------------------------------------------------------------------------

    - name: Start bind9
      shell: kubectl exec -n 6gndt ddosserver -- service named start

    - name: Start caddy
      shell: kubectl exec -n 6gndt ddosserver -- caddy run --config /etc/caddy/Caddyfile &

    - name: Start dnsdist
      shell: kubectl exec -n 6gndt ddosserver -- service dnsdist start

    # - name: Start dnscrypt
    #   shell: kubectl exec -n 6gndt {{ item.pod }} -- ./dnscrypt-proxy-linux_x86_64-2.1.5/config.sh
    #   loop: "{{ ddosclients }}" 
